# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    test-all:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.12.0] # Latest LTS

        steps:
            - uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 8 # Last major
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Get installed Playwright version
              run: echo "PLAYWRIGHT_VERSION=$(cat pnpm-lock.yaml | grep ' playwright@' | sed -r 's/(.*@)([0-9.]*)(:)/\2/' | head -1)" >> $GITHUB_ENV

            - name: Install dependencies
              run: pnpm install --ignore-scripts

            - uses: actions/cache@v3
              name: Setup playwright cache
              id: playwright-cache
              with:
                  path: '~/.cache/ms-playwright'
                  key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
                  restore-keys: |
                      ${{ runner.os }}-playwright-

            - name: Install dependencies
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: pnpm install

            - name: Build Darkroom
              run: pnpm build:darkroom

            - name: Build Timeline
              run: pnpm build:timeline

            - name: Build safelight
              run: pnpm build:safelight

            - name: Test darkroom on Chromium
              run: pnpm test:darkroom

            - name: Test darkroom on Firefox
              run: pnpm test:darkroom-firefox

            - name: Test shared
              run: pnpm test:shared

            - name: Test timeline
              run: pnpm test:timeline
