// This file is temporary so i can figure out how to extract the codec string

// VP9
// https://developer.mozilla.org/en-US/docs/Web/Media/Formats/codecs_parameter#vp9
// Thanks a ton to the libvpx project:
// https://github.com/webmproject/libvpx/blob/fcd1f39e569eeb8d9956ab6f44193c55a7337e76/vp9/decoder/vp9_decodeframe.c#L2948

// cccc.PP.LL.DD
// cccc.PP.LL.DD.CC.cp.tc.mc.FF

// cccc > 0x86 (Codec ID)
//   V_VP9 > vp09

// 4:2:0 = 0x55B3 (ChromaSubsamplingHorz) = 1  AND  0x55B4 (ChromaSubsamplingVert) = 1
// 8 Bit =
// PP:
//  01 > 0x55B3 (ChromaSubsamplingHorz) = 1 AND 0x55B4 (ChromaSubsamplingVert)

//#region Reading VP9 profile

function vpx_rb_read_bit(buffer: DataView, offset = 0) {
    const p = offset >> 3;
    const q = 7 - (offset & 0x7);
    if (p < buffer.byteLength) {
        const bit = (buffer.getUint8(p) >> q) & 1;
        return bit;
    } else {
        throw new Error('No data');
    }
}

function read_profile(buffer: DataView, offset = 0) {
    let profile = vpx_rb_read_bit(buffer, offset);
    profile |= vpx_rb_read_bit(buffer, offset + 1) << 1;

    if (profile > 2) {
        profile += vpx_rb_read_bit(buffer, offset + 2);
    }
    return profile;
}

// Profile 2
// const buff = new Uint8Array([
//     0x96, 0x01, 0x00, 0x92, 0xac, 0x00, 0x4d, 0xc1, 0x80, 0x02, 0xc0, 0x27, 0xc6, 0xff, 0x1b, 0x8f,
//     0x31, 0x78, 0xb1, 0x56, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x04, 0x76, 0x9c, 0xc0, 0x00, 0x00, 0x00,
//     0x00, 0x03, 0x76, 0xba, 0x00, 0x00, 0x00, 0x00, 0x04, 0x76, 0x9c, 0xc0, 0x00, 0x76, 0xba, 0x00
// ]);
// Profile 0
// const buff = new Uint8Array([
//     0x86, 0x01, 0x00, 0x92, 0xf0, 0x01, 0x26, 0x07, 0x00, 0x1c, 0x80, 0x64, 0x8c, 0x4e, 0x97, 0xe0,
//     0x23, 0x28, 0xfa, 0x3e, 0xcf, 0xb2, 0x08, 0x46, 0xbc, 0x97, 0xd2, 0xb8, 0xcd, 0xd6, 0xd4, 0xd7,
//     0xc7, 0x6a, 0x58, 0xf9, 0x8c, 0xff, 0xb4, 0x55, 0x32, 0x5d, 0xe7, 0x3d, 0xbc, 0xe7, 0xa4, 0xfd,
//     0xdb, 0x67, 0x71, 0x6f, 0x9d, 0x77, 0xf3, 0x2d, 0xe0, 0x5c, 0x2c, 0xb7, 0xe6, 0xca, 0x68, 0xaf,
//     0xce, 0x3c, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x65, 0x8f, 0xe2, 0xee, 0xee, 0xb6, 0x56, 0xdb,
//     0xc5, 0xdf, 0x06, 0xa0, 0x85, 0xe1, 0xe6, 0x1b, 0xd6, 0x98, 0xe4, 0x42, 0x38, 0xf8, 0xf3, 0x96,
//     0xc5, 0x0a, 0x7f, 0x04, 0xe0, 0x7d, 0xe9, 0xfd
// ]);
// Profile 1
// const buff = new Uint8Array([
//     0xa6, 0x00, 0x40, 0x92, 0x8c, 0x00, 0x4d, 0x41, 0xc0, 0x01, 0xe0, 0x60, 0x82, 0xdf, 0xf4, 0x43,
//     0xbf, 0xec, 0x3d, 0x76, 0xe0, 0x29, 0x3e, 0x49, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x35, 0x30, 0x1f,
//     0xab, 0x0d, 0xc7, 0x1a, 0x94, 0xfc, 0x3d, 0xe2, 0xc6, 0x41, 0x29, 0x84, 0x1f, 0x06, 0x45, 0x64,
//     0x83, 0xe4, 0xdb, 0x1e, 0x06, 0x5a, 0x5e, 0x11, 0x92, 0xda, 0xd9, 0x54, 0x1e, 0xcf, 0x06, 0xb1,
//     0x22, 0x75, 0x85, 0xb5, 0x61, 0x99, 0xa2, 0xcf, 0x41, 0x02, 0xd5, 0x9c, 0x96, 0xd9, 0xa1, 0x1a,
//     0x98, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x21, 0x10, 0x59, 0xcc, 0x43, 0xc4, 0x01, 0x2e, 0x17, 0x72,
//     0xf1, 0x9e, 0x67, 0x42, 0xdc, 0xe5, 0x65, 0x72, 0x3b, 0x8c, 0x35, 0xd0, 0x78, 0x9a, 0x59, 0xe9,
//     0x03, 0xb3, 0xb7, 0xe2, 0x6b, 0x42, 0x16, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x3f, 0x02, 0x10, 0x3e,
//     0xc6, 0x6d, 0x03, 0x6f, 0x11, 0x2a, 0x7e, 0x32, 0x1a, 0x54, 0x94, 0xa1, 0x6b, 0x3c, 0x41, 0xbf,
//     0xa0, 0x8f, 0xa6, 0x2d, 0x60, 0xa2, 0xea, 0xae, 0x32, 0x22, 0x1b, 0x9e, 0x36, 0x35, 0xec, 0x56,
//     0x49, 0xa3, 0x14, 0x90, 0x8e, 0x22, 0x2f, 0x20, 0x00, 0x00, 0x00, 0x23, 0x1e, 0x2c, 0x75, 0x1b
// ]);
// Profile 3
const buff = new Uint8Array([
    0xb3, 0x00, 0x20, 0x49, 0x78, 0x18, 0xa0, 0x03, 0x00, 0x13, 0x00, 0x70, 0xce, 0x3f, 0xe2, 0xfe,
    0xdb, 0x08, 0x1a, 0x91, 0x5c, 0x3b, 0xf1, 0xa2, 0xb4, 0x37, 0x4d, 0xdd, 0xde, 0xab, 0xd2, 0xfa,
    0x03, 0xd3, 0xbf, 0xff, 0xdb, 0xfe, 0x9f, 0xf6, 0xfd, 0xae, 0x2f, 0xb4, 0x73, 0x97, 0x7c, 0x40,
    0x00, 0x00, 0x00, 0x00, 0xf0, 0x06, 0x3d, 0x14, 0x90, 0x3d, 0x10, 0x4e, 0x9e, 0x70, 0xce, 0xcc,
    0x05, 0x8c, 0x68, 0x22, 0x5d, 0x90, 0x96, 0xec, 0x24, 0x27, 0x9e, 0x8e, 0x83, 0x7d, 0x42, 0x87,
    0x36, 0xab, 0xed, 0xfb, 0xd4, 0xd0, 0x1a, 0x41, 0x8c, 0x03, 0x4f, 0xba, 0x80, 0x06, 0x9d, 0xb1
]);
const dv = new DataView(buff.buffer);
console.log(read_profile(dv, 2));

//#endregion Reading VP9 profile

//#region Read level
const vp9_levels = {
    LEVEL_1: {
        maxLumaSampleRate: 829440,
        maxLumaPicSize: 36864,
        maxWidthAndHeight: 512,
        maxBitrate: 200,
        maxCPBsize: 400,
        minCompressionRatio: 2,
        maxTiles: 1,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_1_1: {
        maxLumaSampleRate: 2764800,
        maxLumaPicSize: 73728,
        maxWidthAndHeight: 768,
        maxBitrate: 800,
        maxCPBsize: 1000,
        minCompressionRatio: 2,
        maxTiles: 1,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_2: {
        maxLumaSampleRate: 4608000,
        maxLumaPicSize: 122880,
        maxWidthAndHeight: 960,
        maxBitrate: 1800,
        maxCPBsize: 1500,
        minCompressionRatio: 2,
        maxTiles: 1,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_2_1: {
        maxLumaSampleRate: 9216000,
        maxLumaPicSize: 245760,
        maxWidthAndHeight: 1344,
        maxBitrate: 3600,
        maxCPBsize: 2800,
        minCompressionRatio: 2,
        maxTiles: 2,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_3: {
        maxLumaSampleRate: 20736000,
        maxLumaPicSize: 552960,
        maxWidthAndHeight: 2048,
        maxBitrate: 7200,
        maxCPBsize: 6000,
        minCompressionRatio: 2,
        maxTiles: 4,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_3_1: {
        maxLumaSampleRate: 36864000,
        maxLumaPicSize: 983040,
        maxWidthAndHeight: 2752,
        maxBitrate: 12000,
        maxCPBsize: 10000,
        minCompressionRatio: 2,
        maxTiles: 4,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_4: {
        maxLumaSampleRate: 83558400,
        maxLumaPicSize: 2228224,
        maxWidthAndHeight: 4160,
        maxBitrate: 18000,
        maxCPBsize: 16000,
        minCompressionRatio: 4,
        maxTiles: 4,
        minAltRefDist: 4,
        maxRefFrames: 8
    },
    LEVEL_4_1: {
        maxLumaSampleRate: 160432128,
        maxLumaPicSize: 2228224,
        maxWidthAndHeight: 4160,
        maxBitrate: 30000,
        maxCPBsize: 18000,
        minCompressionRatio: 4,
        maxTiles: 4,
        minAltRefDist: 5,
        maxRefFrames: 6
    },
    LEVEL_5: {
        maxLumaSampleRate: 311951360,
        maxLumaPicSize: 8912896,
        maxWidthAndHeight: 8384,
        maxBitrate: 60000,
        maxCPBsize: 36000,
        minCompressionRatio: 6,
        maxTiles: 8,
        minAltRefDist: 6,
        maxRefFrames: 4
    },
    LEVEL_5_1: {
        maxLumaSampleRate: 588251136,
        maxLumaPicSize: 8912896,
        maxWidthAndHeight: 8384,
        maxBitrate: 120000,
        maxCPBsize: 46000,
        minCompressionRatio: 8,
        maxTiles: 8,
        minAltRefDist: 10,
        maxRefFrames: 4
    },
    // TODO(huisu): update max_cpb_size for level 5_2 ~ 6_2 when
    // they are finalized (currently tentative).
    LEVEL_5_2: {
        maxLumaSampleRate: 1176502272,
        maxLumaPicSize: 8912896,
        maxWidthAndHeight: 8384,
        maxBitrate: 180000,
        maxCPBsize: 90000,
        minCompressionRatio: 8,
        maxTiles: 8,
        minAltRefDist: 10,
        maxRefFrames: 4
    },
    LEVEL_6: {
        maxLumaSampleRate: 1176502272,
        maxLumaPicSize: 35651584,
        maxWidthAndHeight: 16832,
        maxBitrate: 180000,
        maxCPBsize: 90000,
        minCompressionRatio: 8,
        maxTiles: 16,
        minAltRefDist: 10,
        maxRefFrames: 4
    },
    LEVEL_6_1: {
        maxLumaSampleRate: 2353004544,
        maxLumaPicSize: 35651584,
        maxWidthAndHeight: 16832,
        maxBitrate: 240000,
        maxCPBsize: 180000,
        minCompressionRatio: 8,
        maxTiles: 16,
        minAltRefDist: 10,
        maxRefFrames: 4
    },
    LEVEL_6_2: {
        maxLumaSampleRate: 4706009088,
        maxLumaPicSize: 35651584,
        maxWidthAndHeight: 16832,
        maxBitrate: 480000,
        maxCPBsize: 360000,
        minCompressionRatio: 8,
        maxTiles: 16,
        minAltRefDist: 10,
        maxRefFrames: 4
    }
};
